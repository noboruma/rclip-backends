# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: rclipaws-lambda
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
custom:
  linkTableName: 'link-${self:provider.stage}'
  clipTableName: 'clipboard-${self:provider.stage}'

provider:
  name: aws
  runtime: python2.7
  usagePlan:
      limit: 1000
      period: MONTH

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ClipboardTable", "Arn" ] }
        - { "Fn::GetAtt": ["LinkTable", "Arn" ] }
  environment:
    CLIPBOARD_TABLE: ${self:custom.clipTableName}
    LINK_TABLE: ${self:custom.linkTableName}

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  push:
    handler: handler.push_clipboard
    memorySize: 128
    events:
      - http:
          path: push
          method: get
  pull:
    handler: handler.pull_clipboard
    memorySize: 128
    events:
      - http:
          path: pull
          method: get
  open:
    handler: handler.open_clipboard
    memorySize: 128
    events:
      - http:
          path: open
          method: get
  link:
    handler: handler.link_clipboard
    memorySize: 128
    events:
      - http:
          path: link
          method: get

# you can add CloudFormation resource templates here
resources:
  Resources:
    LinkTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.linkTableName}
        AttributeDefinitions:
          - AttributeName: shortHash
            AttributeType: S
        KeySchema:
          - AttributeName: shortHash
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ClipboardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.clipTableName}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
